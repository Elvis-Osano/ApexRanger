version: '3.1'
services:
  apex:
    container_name: apexFrontend
    build:
      context: ./apex
      dockerfile: ./Dockerfile
    depends_on:
      - orders
       
    ports:
      - '3002:3002'  
  orders:
    container_name: apexOrders
    build:
      context: ./apexServer
      dockerfile: ./apps/orders/Dockerfile    
    depends_on:     
      - billing
      - auth
      - rabbitmq
    # volumes:
    #   - .:/app
    #   - /app/node_modules
    ports:
      - '3000:3000'
  billing:
    container_name: apexBilling
    build:
      context: ./apexServer
      dockerfile: ./apps/billing/Dockerfile
      
    depends_on:      
      - rabbitmq
      - auth
    ports:
      - '5000:5000'  
    # volumes:
    #   - .:/app
    #   - /app/node_modules
  auth:
    container_name: apexAuth
    build:
      context: ./apexServer
      dockerfile: ./apps/auth/Dockerfile     
    ports:
      - '3001:3001'
    
    depends_on:
      - db
      - rabbitmq
    # volumes:
    #   - .:/app
    #   - /app/node_modules
  rabbitmq:
    container_name: RabbitMQ
    image: rabbitmq
    ports:
      - '5672:5672'
      
  db:
    container_name: apexDatabase
    image: postgres
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust 
      - POSTGRES_PASSWORD=password 
      - POSTGRES_USER=postgres
      - POSTGRES_DB=apex 
    volumes:
      - local_pgdata:/var/lib/postgresql/data 
    ports:
      - 3306:3306

  dbadmin:
    container_name: ApexDBadmin
    image: dpage/pgadmin4    
    ports:
      - 5050:80
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: pgadmin4
    volumes:
      - pgadmin-data:/var/lib/pgadmin 

volumes:
  local_pgdata:
  pgadmin-data: