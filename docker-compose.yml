version: '3.1'
services:
  apex:
    container_name: apexFrontend
    build:
      context: ./apex
      dockerfile: ./Dockerfile
    depends_on:
      - orders
       
     
  orders:
    container_name: apexOrders
    build:
      context: ./apexServer
      dockerfile: ./apps/orders/Dockerfile    
    depends_on:     
      - billing
      - auth
      - rabbitmq
   
  billing:
    container_name: apexBilling
    build:
      context: ./apexServer
      dockerfile: ./apps/billing/Dockerfile
      
    depends_on:      
      - rabbitmq
      - auth
      
    
  auth:
    container_name: apexAuth
    build:
      context: ./apexServer
      dockerfile: ./apps/auth/Dockerfile    
    
    
    depends_on:
      - db
      - rabbitmq
    
  rabbitmq:
    container_name: RabbitMQ
    image: rabbitmq
    
      
  db:
    container_name: apexDatabase
    image: postgres
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust 
      - POSTGRES_PASSWORD=password 
      - POSTGRES_USER=postgres
      - POSTGRES_DB=apex 
    volumes:
      - local_pgdata:/var/lib/postgresql/data 
    
  proxy:    
      container_name: apex_proxy
      
      depends_on:
        - orders
        
      build:
        dockerfile: ./Dockerfile
        context: ./nginx
      ports:
        - '80:80'
volumes:
  local_pgdata:
  # pgadmin-data:

  # dbadmin:
  #   container_name: ApexDBadmin
  #   image: dpage/pgadmin4    
  #   ports:
  #     - 5050:80
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: admin@admin.com
  #     PGADMIN_DEFAULT_PASSWORD: pgadmin4
  #   volumes:
  #     - pgadmin-data:/var/lib/pgadmin 
  